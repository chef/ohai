# Documentation available at https://expeditor-docs.es.chef.io/

# Slack channel in Chef Software slack to send notifications about build failures, etc
slack:
  notify_channel: chef-notify

# Which Ruby Gems, built when the Omnibus package is built, to publish to rubygems.org
# This publish is triggered by the `built_in:publish_rubygems` artifact_action.
rubygems:
  - ohai

github:
  # The file where the MAJOR.MINOR.PATCH version is kept. The version in this file
  # is bumped automatically via the `built_in:bump_version` merge_action.
  version_file: "VERSION"
  # The file where our CHANGELOG is kept. This file is updated automatically with
  # details from the Pull Request via the `built_in:update_changelog` merge_action.
  changelog_file: "CHANGELOG.md"
  # The tag format to use (e.g. v1.0.0)
  version_tag_format: "v{{version}}"
  # The Github Team primarily responsible for handling incoming Pull Requests.
  maintainer_group: chef/client-maintainers

# These actions are taken, in order they are specified, anytime a Pull Request is merged.
merge_actions:
  - built_in:bump_version:
      ignore_labels:
        - "Version: Skip Bump"
        - "Expeditor: Skip Version Bump"
        - "Expeditor: Skip All"
  - bash:.expeditor/update_version.sh:
      only_if: built_in:bump_version
  - built_in:update_changelog:
      ignore_labels:
        - "Meta: Exclude From Changelog"
        - "Expeditor: Exclude From Changelog"
        - "Expeditor: Skip All"
  - built_in:trigger_omnibus_release_build:
      ignore_labels:
        - "Omnibus: Skip Build"
        - "Expeditor: Skip Build"
        - "Expeditor: Skip All"
      only_if: built_in:bump_version

# These actions are taken, in the order specified, when an Omnibus artifact is promoted
# within Chef's internal artifact storage system.
artifact_actions:
  promoted_to_stable:
    - built_in:publish_rubygems
    - built_in:rollover_changelog
    - built_in:notify_chefio_slack_channels
